* Redshift data copy to TiDB Cloud
** Documentation
  + KMS
    Create KMS for storage encryption if it does not exist.
  + Create policy
    #+BEGIN_SRC
workstation$ more policy.json
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey"
            ],
            "Resource": [
                "arn:aws:kms:us-east-1:11111111111:key/h403784d-1111-2222-33a3-95bf3af0137b"
            ]
        },
        {
            "Sid": "VisualEditor1",
            "Effect": "Allow",
            "Action": [
                "s3:PutObject",
                "s3:Get*",
                "s3:List*"
            ],
            "Resource": [
                "arn:aws:s3:::jay-data",
                "arn:aws:s3:::jay-data/*"
            ]
        }
    ]
}
workstation$ aws iam create-policy --policy-name redshift-s3-policy --policy-document file://./policy.json
    #+END_SRC
  + Create role
    #+BEGIN_SRC
workstation$ more Role-Trust-Policy.json
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "Service": "redshift.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
        }
    ]
}
workstation$ aws iam create-role --role-name redshift-s3-role --assume-role-policy-document file://./Role-Trust-Policy.json
workstation$ aws iam attach-role-policy --policy-arn arn:aws:iam::aws:policy/redshift-s3-policy --role-name redshift-s3-role
    #+END_SRC
  + Attach the role to redshift
    #+BEGIN_SRC
workstation$ aws redshift modify-cluster-iam-roles \
    --cluster-identifier mycluster \
    --remove-iam-roles arn:aws:iam::123456789012:role/redshift-s3-role
workstation$ aws redshift modify-cluster-iam-roles \
    --cluster-identifier mycluster \
    --add-iam-roles arn:aws:iam::123456789012:role/redshift-s3-role

    #+END_SRC
  + Unload Redshift data to S3
    In the editor-v2, run the below command
    #+BEGIN_SRC
EDITOR: UNLOAD('select * from public.test01') TO 's3://jay-data/redshift/test01.csv' 
WITH CREDENTIALS 'aws_iam_role=arn:aws:iam::123456789012:role/redshift-s3-role;aws_access_key_id=ASIA......EQQHF;aws_secret_access_key=/KgOW4pX......kaUTd2K3f;aws_session_token=QoJb3......OTTFnisSARgHrFYtnQ==' 
DELIMITER ',' NULL 'null' ALLOWOVERWRITE;

Summary
Warnings:
UNLOAD completed, 3 record(s) unloaded successfully.
Returned rows: 0
Elapsed time: 748ms
Result set query:
UNLOAD('select * from public.test01') TO 's3://jay-data/redshift/test01.csv' 
WITH CREDENTIALS 'aws_iam_role=arn:aws:iam::123456789012:role/redshift-s3-role;aws_access_key_id=ASIA......CV7FB;aws_secret_access_key=D6Isf......uzwdx3Eq3KT;aws_session_token=IQoJb3JpZ2l......xfOY8p+8qxr46g==' 
DELIMITER ',' NULL 'null' ALLOWOVERWRITE
--RequestID=898565f1-2e37-4087-938b-2189fe02a4a9; TraceID=1-648b092c-7ae868af266e275c2a4cb02e
    #+END_SRC
  + Import S3 data to TiDB Cloud
** Scripts    
